#include<bits/stdc++.h>
using namespace std;
int a[32];
int b[32];
int s=0,ff=0;
int k1,n;
vector<int>k[32];
void dfs(int x){
	if (ff==1)return;
	if (x>31){
		s++;
		//cout<<s<<endl;
		if (s==n){
			cout<<"Found"<<endl;
			for (int i=1;i<=31;i++){
				cout<<b[i]<<" ";
			}
			cout<<endl;
			ff=1;
			return;
		}
	}
	else if (b[x]>0)dfs(x+1);
	else {
		for (int i=1;i<=k1;i++){
			int f=0;
			for (int j=0;j<k[x].size();j++){
				if (b[k[x][j]]==i){
					f=1;
					//if (x==16)cout<<i<<" "<<k[x][j]<<endl;
					break;
				}
			}
		
			if (f==0){
				b[x]=i;	//if (x==16)cout<<b[x]<<endl;
				dfs(x+1);
			}
		}
		b[x]=a[x];
	}
}
int main(){
	freopen("hexodoku.in","r",stdin);
	freopen("hexodoku.out","w",stdout);
	cin>>k1>>n;
	
	k[1].push_back(2);
	k[1].push_back(4);
	k[1].push_back(5);
	k[1].push_back(6);
	k[1].push_back(9);
	k[1].push_back(10);
	k[1].push_back(11);
	k[1].push_back(14);
	k[1].push_back(17);
	k[1].push_back(19);
	k[1].push_back(23);
	k[1].push_back(29);
	k[2].push_back(1);
	k[2].push_back(4);
	k[2].push_back(5);
	k[2].push_back(6);
	k[2].push_back(10);
	k[2].push_back(11);
	k[2].push_back(12);
	k[2].push_back(15);
	k[2].push_back(18);
	k[2].push_back(20);
	k[2].push_back(24);
	k[2].push_back(25);
	k[3].push_back(4);
	k[3].push_back(5);
	k[3].push_back(6);
	k[3].push_back(7);
	k[3].push_back(8);
	k[3].push_back(9);
	k[3].push_back(10);
	k[3].push_back(14);
	k[3].push_back(15);
	k[3].push_back(21);
	k[3].push_back(27);
	k[3].push_back(31);
	k[4].push_back(1);
	k[4].push_back(2);
	k[4].push_back(3);
	k[4].push_back(5);
	k[4].push_back(6);
	k[4].push_back(7);
	k[4].push_back(8);
	k[4].push_back(9);
	k[4].push_back(10);
	k[4].push_back(14);
	k[4].push_back(15);
	k[4].push_back(16);
	k[4].push_back(19);
	k[4].push_back(22);
	k[4].push_back(28);
	k[5].push_back(1);
	k[5].push_back(2);
	k[5].push_back(3);
	k[5].push_back(4);
	k[5].push_back(6);
	k[5].push_back(7);
	k[5].push_back(10);
	k[5].push_back(11);
	k[5].push_back(15);
	k[5].push_back(17);
	k[5].push_back(20);
	k[5].push_back(23);
	k[5].push_back(25);
	k[5].push_back(39);
	k[6].push_back(1);
	k[6].push_back(2);
	k[6].push_back(3);
	k[6].push_back(4);
	k[6].push_back(5);
	k[6].push_back(7);
	k[6].push_back(10);
	k[6].push_back(11);
	k[6].push_back(12);
	k[6].push_back(16);
	k[6].push_back(18);
	k[6].push_back(21);
	k[6].push_back(24);
	k[6].push_back(26);
	k[7].push_back(3);
	k[7].push_back(4);
	k[7].push_back(5);
	k[7].push_back(6);
	k[7].push_back(11);
	k[7].push_back(12);
	k[7].push_back(13);
	k[7].push_back(17);
	k[7].push_back(18);
	k[7].push_back(22);
	k[7].push_back(27);
	k[7].push_back(30);
	k[8].push_back(3);
	k[8].push_back(4);
	k[8].push_back(9);
	k[8].push_back(10);
	k[8].push_back(11);
	k[8].push_back(12);
	k[8].push_back(13);
	k[8].push_back(14);
	k[8].push_back(15);
	k[8].push_back(20);
	k[8].push_back(26);
	k[8].push_back(30);
	k[9].push_back(1);
	k[9].push_back(3);
	k[9].push_back(8);
	k[9].push_back(10);
	k[9].push_back(11);
	k[9].push_back(12);
	k[9].push_back(13);
	k[9].push_back(14);
	k[9].push_back(15);
	k[9].push_back(19);
	k[9].push_back(21);
	k[9].push_back(27);
	k[9].push_back(31);
	k[9].push_back(4);
	k[10].push_back(1);
	k[10].push_back(2);
	k[10].push_back(3);
	k[10].push_back(4);
	k[10].push_back(5);
	k[10].push_back(6);
	k[10].push_back(8);
	k[10].push_back(9);
	k[10].push_back(11);
	k[10].push_back(12);
	k[10].push_back(13);
	k[10].push_back(14);
	k[10].push_back(15);
	k[10].push_back(16);
	k[10].push_back(17);
	k[10].push_back(20);
	k[10].push_back(21);
	k[10].push_back(22);
	k[10].push_back(25);
	k[10].push_back(28);
	k[11].push_back(1);
	k[11].push_back(2);
	k[11].push_back(4);
	k[11].push_back(5);
	k[11].push_back(6);
	k[11].push_back(7);
	k[11].push_back(10);
	k[11].push_back(8);
	k[11].push_back(9);
	k[11].push_back(12);
	k[11].push_back(13);
	k[11].push_back(15);
	k[11].push_back(16);
	k[11].push_back(17);
	k[11].push_back(18);
	k[11].push_back(21);
	k[11].push_back(22);
	k[11].push_back(23);
	k[11].push_back(26);
	k[11].push_back(29);
	k[12].push_back(2);
	k[12].push_back(6);
	k[12].push_back(7);
	k[12].push_back(8);
	k[12].push_back(9);
	k[12].push_back(10);
	k[12].push_back(11);
	k[12].push_back(13);
	k[12].push_back(17);
	k[12].push_back(18);
	k[12].push_back(22);
	k[12].push_back(24);
	k[12].push_back(27);
	k[12].push_back(30);
	k[13].push_back(6);
	k[13].push_back(7);
	k[13].push_back(8);
	k[13].push_back(9);
	k[13].push_back(10);
	k[13].push_back(11);
	k[13].push_back(12);
	k[13].push_back(17);
	k[13].push_back(18);
	k[13].push_back(23);
	k[13].push_back(28);
	k[13].push_back(31);
	k[14].push_back(1);
	k[14].push_back(3);
	k[14].push_back(8);
	k[14].push_back(9);
	k[14].push_back(10);
	k[14].push_back(15);
	k[14].push_back(16);
	k[14].push_back(17);
	k[14].push_back(18);
	k[14].push_back(19);
	k[14].push_back(20);
	k[14].push_back(21);
	k[14].push_back(25);
	k[14].push_back(26);
	k[14].push_back(30);
	k[14].push_back(4);
	k[14].push_back(14);
	k[15].push_back(2);
	k[15].push_back(3);
	k[15].push_back(4);
	k[15].push_back(5);
	k[15].push_back(8);
	k[15].push_back(9);
	k[15].push_back(10);
	k[15].push_back(11);
	k[15].push_back(14);
	k[15].push_back(16);
	k[15].push_back(17);
	k[15].push_back(18);
	k[15].push_back(19);
	k[15].push_back(20);
	k[15].push_back(21);
	k[15].push_back(22);
	k[15].push_back(25);
	k[15].push_back(26);
	k[15].push_back(27);
	k[15].push_back(31);
	k[16].push_back(4);
	k[16].push_back(6);
	k[16].push_back(10);
	k[16].push_back(11);
	k[16].push_back(14);
	k[16].push_back(15);
	k[16].push_back(17);
	k[16].push_back(18);
	k[16].push_back(21);
	k[16].push_back(22);
	k[16].push_back(26);
	k[16].push_back(28);
	k[17].push_back(1);
	k[17].push_back(5);
	k[17].push_back(6);
	k[17].push_back(7);
	k[17].push_back(10);
	k[17].push_back(11);
	k[17].push_back(12);
	k[17].push_back(13);
	k[17].push_back(14);
	k[17].push_back(15);
	k[17].push_back(16);
	k[17].push_back(18);
	k[17].push_back(21);
	k[17].push_back(22);
	k[17].push_back(23);
	k[17].push_back(24);
	k[17].push_back(27);
	k[17].push_back(28);
	k[17].push_back(29);
	k[17].push_back(30);
	k[18].push_back(2);
	k[18].push_back(6);
	k[18].push_back(7);
	k[18].push_back(11);
	k[18].push_back(12);
	k[18].push_back(13);
	k[18].push_back(14);
	k[18].push_back(15);
	k[18].push_back(16);
	k[18].push_back(17);
	k[18].push_back(22);
	k[18].push_back(23);
	k[18].push_back(24);
	k[18].push_back(28);
	k[18].push_back(29);
	k[18].push_back(31);
	k[19].push_back(1);
	k[19].push_back(4);
	k[19].push_back(9);
	k[19].push_back(14);
	k[19].push_back(15);
	k[19].push_back(20);
	k[19].push_back(21);
	k[19].push_back(22);
	k[19].push_back(23);
	k[19].push_back(24);
	k[19].push_back(25);
	k[19].push_back(26);
	k[20].push_back(2);
	k[20].push_back(5);
	k[20].push_back(10);
	k[20].push_back(15);
	k[20].push_back(14);
	k[20].push_back(19);
	k[20].push_back(21);
	k[20].push_back(22);
	k[20].push_back(23);
	k[20].push_back(24);
	k[20].push_back(25);
	k[20].push_back(26);
	k[20].push_back(8);
	k[20].push_back(30);
	k[21].push_back(6);
	k[21].push_back(10);
	k[21].push_back(11);
	k[21].push_back(15);
	k[21].push_back(14);
	k[21].push_back(16);
	k[21].push_back(17);
	k[21].push_back(19);
	k[21].push_back(20);
	k[21].push_back(22);
	k[21].push_back(23);
	k[21].push_back(24);
	k[21].push_back(25);
	k[21].push_back(26);
	k[21].push_back(27);
	k[21].push_back(28);
	k[21].push_back(30);
	k[21].push_back(3);
	k[21].push_back(9);
	k[21].push_back(31);
	k[22].push_back(4);
	k[22].push_back(7);
	k[22].push_back(10);
	k[22].push_back(11);
	k[22].push_back(12);
	k[22].push_back(15);
	k[22].push_back(16);
	k[22].push_back(17);
	k[22].push_back(19);
	k[22].push_back(20);
	k[22].push_back(21);
	k[22].push_back(23);
	k[22].push_back(24);
	k[22].push_back(26);
	k[22].push_back(27);
	k[22].push_back(28);
	k[22].push_back(30);
	k[22].push_back(31);
	k[22].push_back(18);
	k[22].push_back(29);
	k[23].push_back(1);
	k[23].push_back(5);
	k[23].push_back(11);
	k[23].push_back(13);
	k[23].push_back(17);
	k[23].push_back(18);
	k[23].push_back(19);
	k[23].push_back(20);
	k[23].push_back(21);
	k[23].push_back(22);
	k[23].push_back(24);
	k[23].push_back(28);
	k[23].push_back(29);
	k[23].push_back(31);
	k[24].push_back(2);
	k[24].push_back(6);
	k[24].push_back(12);
	k[24].push_back(18);
	k[24].push_back(17);
	k[24].push_back(19);
	k[24].push_back(20);
	k[24].push_back(21);
	k[24].push_back(22);
	k[24].push_back(23);
	k[24].push_back(28);
	k[24].push_back(29);
	k[25].push_back(2);
	k[25].push_back(5);
	k[25].push_back(10);
	k[25].push_back(15);
	k[25].push_back(14);
	k[25].push_back(19);
	k[25].push_back(20);
	k[25].push_back(21);
	k[25].push_back(26);
	k[25].push_back(27);
	k[25].push_back(28);
	k[25].push_back(29);
	k[26].push_back(6);
	k[26].push_back(8);
	k[26].push_back(11);
	k[26].push_back(14);
	k[26].push_back(16);
	k[26].push_back(15);
	k[26].push_back(19);
	k[26].push_back(20);
	k[26].push_back(21);
	k[26].push_back(22);
	k[26].push_back(25);
	k[26].push_back(27);
	k[26].push_back(28);
	k[26].push_back(29);
	k[26].push_back(30);
	k[26].push_back(31);
	k[27].push_back(3);
	k[27].push_back(7);
	k[27].push_back(9);
	k[27].push_back(12);
	k[27].push_back(15);
	k[27].push_back(17);
	k[27].push_back(21);
	k[27].push_back(22);
	k[27].push_back(25);
	k[27].push_back(26);
	k[27].push_back(28);
	k[27].push_back(29);
	k[27].push_back(30);
	k[27].push_back(31);
	k[28].push_back(4);
	k[28].push_back(10);
	k[28].push_back(13);
	k[28].push_back(16);
	k[28].push_back(18);
	k[28].push_back(21);
	k[28].push_back(22);
	k[28].push_back(23);
	k[28].push_back(24);
	k[28].push_back(26);
	k[28].push_back(27);
	k[28].push_back(29);
	k[28].push_back(30);
	k[28].push_back(31);
	k[28].push_back(17);
	k[29].push_back(1);
	k[29].push_back(5);
	k[29].push_back(11);
	k[29].push_back(17);
	k[29].push_back(18);
	k[29].push_back(22);
	k[29].push_back(23);
	k[29].push_back(24);
	k[29].push_back(25);
	k[29].push_back(26);
	k[29].push_back(27);
	k[29].push_back(28);
	k[30].push_back(7);
	k[30].push_back(8);
	k[30].push_back(12);
	k[30].push_back(14);
	k[30].push_back(17);
	k[30].push_back(20);
	k[30].push_back(21);
	k[30].push_back(22);
	k[30].push_back(26);
	k[30].push_back(27);
	k[30].push_back(28);
	k[30].push_back(31);
	k[31].push_back(3);
	k[31].push_back(9);
	k[31].push_back(13);
	k[31].push_back(15);
	k[31].push_back(18);
	k[31].push_back(21);
	k[31].push_back(22);
	k[31].push_back(23);
	k[31].push_back(26);
	k[31].push_back(27);
	k[31].push_back(28);
	k[31].push_back(30);
	for (int i=1;i<=31;i++){
		cin>>a[i];
		if (a[i]==0)a[i]=-i;
		b[i]=a[i];
	}
	dfs(1);
	if (ff=0||s<n)
	cout<<"No way"<<endl;
	return 0;
}


