#include<bits/stdc++.h>
using namespace std;
int n,k;
int st[33],ans[33];
bool l1[33][33],l2[33][33],l3[33][33],l4[33][33],f=0;
unsigned int f1[10],f2[10],f3[10],f4[10];
void INIT(){
	f1[1]=(1<<1)|(1<<2);
	f1[2]=(1<<3)|(1<<4)|(1<<5)|(1<<6)|(1<<7);
	f1[3]=(1<<8)|(1<<9)|(1<<10)|(1<<11)|(1<<12)|(1<<13);
	f1[4]=(1<<14)|(1<<15)|(1<<16)|(1<<17)|(1<<18);
	f1[5]=(1<<19)|(1<<20)|(1<<21)|(1<<22)|(1<<23)|(1<<24);
	f1[6]=(1<<25)|(1<<26)|(1<<27)|(1<<28)|(1<<29);
	f1[7]=(1<<30)|(1<<31);
	f2[1]=(1<<7)|(1<<13);
	f2[2]=(1<<2)|(1<<6)|(1<<12)|(1<<18)|(1<<24);
	f2[3]=(1<<1)|(1<<5)|(1<<11)|(1<<17)|(1<<23)|(1<<29);
	f2[4]=(1<<4)|(1<<10)|(1<<16)|(1<<22)|(1<<28);
	f2[5]=(1<<3)|(1<<9)|(1<<15)|(1<<21)|(1<<27)|(1<<31);
	f2[6]=(1<<8)|(1<<14)|(1<<20)|(1<<26)|(1<<30);
	f2[7]=(1<<19)|(1<<25);
	f3[1]=(1<<3)|(1<<8);
	f3[2]=(1<<1)|(1<<4)|(1<<9)|(1<<14)|(1<<19);
	f3[3]=(1<<2)|(1<<5)|(1<<10)|(1<<15)|(1<<20)|(1<<25);
	f3[4]=(1<<6)|(1<<11)|(1<<16)|(1<<21)|(1<<26);
	f3[5]=(1<<7)|(1<<12)|(1<<17)|(1<<22)|(1<<27)|(1<<30);
	f3[6]=(1<<13)|(1<<18)|(1<<23)|(1<<28)|(1<<31);
	f3[7]=(1<<24)|(1<<29);
	f4[1]=(1<<1)|(1<<2)|(1<<4)|(1<<5)|(1<<6)|(1<<10)|(1<<11);
	f4[2]=(1<<3)|(1<<4)|(1<<8)|(1<<9)|(1<<10)|(1<<14)|(1<<15);
	f4[3]=(1<<6)|(1<<7)|(1<<11)|(1<<12)|(1<<13)|(1<<17)|(1<<18);
	f4[4]=(1<<10)|(1<<11)|(1<<15)|(1<<16)|(1<<17)|(1<<21)|(1<<22);
	f4[5]=(1<<14)|(1<<15)|(1<<19)|(1<<20)|(1<<21)|(1<<25)|(1<<26);
	f4[6]=(1<<17)|(1<<18)|(1<<22)|(1<<23)|(1<<24)|(1<<28)|(1<<29);
	f4[7]=(1<<21)|(1<<22)|(1<<26)|(1<<27)|(1<<28)|(1<<30)|(1<<31);
}
void dfs(int pos){
	int i,j;
	unsigned int op;
	bool F;
	if(f) return;
	if(pos==32&&n==1){f=1;return;}
	if(pos==32&&n!=1){n--;return;}
	if(st[pos]){
		ans[pos]=st[pos];
		dfs(pos+1);
	}
	else{
		for(i=1;i<=k;i++){
			F=0;
			if(f) return;
			for(j=1;j<=7;j++){op=f1[j]&(1<<pos);if(op){if(l1[j][i])F=1;break;}}
			for(j=1;j<=7;j++){op=f2[j]&(1<<pos);if(op){if(l2[j][i])F=1;break;}}
			for(j=1;j<=7;j++){op=f3[j]&(1<<pos);if(op){if(l3[j][i])F=1;break;}}
			for(j=1;j<=7;j++){op=f4[j]&(1<<pos);if(op){if(l4[j][i])F=1;}}
			if(F==0){
				ans[pos]=i;
				for(j=1;j<=7;j++){op=f1[j]&(1<<pos);if(op){l1[j][i]=1;break;}}
				for(j=1;j<=7;j++){op=f2[j]&(1<<pos);if(op){l2[j][i]=1;break;}}
				for(j=1;j<=7;j++){op=f3[j]&(1<<pos);if(op){l3[j][i]=1;break;}}
				for(j=1;j<=7;j++){op=f4[j]&(1<<pos);if(op){l4[j][i]=1;}}
				dfs(pos+1);
				if(f) return;
				for(j=1;j<=7;j++){op=f1[j]&(1<<pos);if(op){l1[j][i]=0;break;}}
				for(j=1;j<=7;j++){op=f2[j]&(1<<pos);if(op){l2[j][i]=0;break;}}
				for(j=1;j<=7;j++){op=f3[j]&(1<<pos);if(op){l3[j][i]=0;break;}}
				for(j=1;j<=7;j++){op=f4[j]&(1<<pos);if(op){l4[j][i]=0;}}
				ans[pos]=0;
			}
		}
	}
	return;
}
int main(){
	freopen("hexodoku.in","r",stdin);
	freopen("hexodoku.out","w",stdout);
	int i,j;
	unsigned int op;
	INIT();
	scanf("%d%d",&k,&n);
	for(i=1;i<=31;i++){
		scanf("%d",&st[i]);
		for(j=1;j<=7;j++){op=f1[j]&(1<<i);if(op){l1[j][st[i]]=1;break;}}
		for(j=1;j<=7;j++){op=f2[j]&(1<<i);if(op){l2[j][st[i]]=1;break;}}
		for(j=1;j<=7;j++){op=f3[j]&(1<<i);if(op){l3[j][st[i]]=1;break;}}
		for(j=1;j<=7;j++){op=f4[j]&(1<<i);if(op){l4[j][st[i]]=1;}}
	}
	if(k<=6){
		printf("No way\n");return 0;
	}
	dfs(1);
	if(f){
		printf("Found\n");
		for(i=1;i<=31;i++) printf("%d ",ans[i]);
	}
	else printf("No way\n");
	return 0;
}

