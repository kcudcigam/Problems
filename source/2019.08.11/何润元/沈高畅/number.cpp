#include<bits/stdc++.h>
#define int long long
using namespace std;
inline int read()
{
	char ch=getchar();
	int f=0;
	while(!isdigit(ch)) ch=getchar();
	while(isdigit(ch)) f=f*10+ch-48,ch=getchar();
	return f; 
}
int t;
int tt[25];
int aa[25];
int bb[25];
int cc[25];
int ax,ay,bx,by,cx,cy;
bool fa,fb,fc;
bool fsa,fsb,fsc;
int tot,ans;
void check()
{
	int p=3;
	if(fa==0&&ax==0) p--;
	if(fb==0&&bx==0) p--;
	if(fc==0&&cx==0) p--;
	ans=min(ans,p);
}
void dfs(int dep,int jw)
{
	if(ax==8&&bx==3&&cx==0)
		{
			int q=0;
		}
	int pla=0,plb=0,plc=0,dx=0;
	if(dep<1)
		{
			if(jw>0) return;
			else check();
			return;
		}
	tt[dep]-=jw;
	if(tt[dep]<0) tt[dep]+=10; 
	if(fsa)
		{
			pla=0;
		}
	if(fa)
		{
			pla=ax;
			if(fsb)
				{
					plb=0;
				}
			if(fb)
				{
							plb=bx;
							dx=(pla+plb)%10;
							if(tt[dep]<dx) dx-=10;
							plc=tt[dep]-dx;
					if(fc)
						{
							if(plc==cx||plc==cy)
								{
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
								}
						}
					else
						{
							aa[dep]=pla;
							bb[dep]=plb;
							cc[dep]=plc;
							cy=plc;
							if(plc!=cx)fc=1;
							if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
							fc=0;
						}
					plb=by;
					dx=(pla+plb)%10;
					if(tt[dep]<dx) dx-=10;
					plc=tt[dep]-dx;
					if(fc)
						{
							if(plc==cx||plc==cy) 
								{
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
								}
						}
					else
						{
							aa[dep]=pla;
							bb[dep]=plb;
							cc[dep]=plc;
							cy=plc;
							if(plc!=cx)fc=1;
							if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
							fc=0;
						}
				}
			else
				{
					for(int i=0;i<=9;i++)
						{
							plb=i;
							by=plb;
							if(plb!=bx) fb=1;
							dx=(pla+plb)%10;
							if(tt[dep]<dx) dx-=10;
							plc=tt[dep]-dx;
							if(fc)
								{
									if(plc==cx||plc==cy) 
										{
											aa[dep]=pla;
											bb[dep]=plb;
											cc[dep]=plc;
											if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
										}
								}
							else
								{
									cy=plc;
									if(plc!=cx)fc=1;
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									fc=0;
								}
							fb=0;
						}
				}
			pla=ay;
			if(fb)
				{
					plb=bx;
					dx=(pla+plb)%10;
					if(tt[dep]<dx) dx-=10;
					plc=tt[dep]-dx;
					if(fc)
						{	
							if(plc==cx||plc==cy)
								{
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
								}
						}
					else
						{
							aa[dep]=pla;
							bb[dep]=plb;
							cc[dep]=plc;
							cy=plc;
							if(plc!=cx)fc=1;
							if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
							fc=0;
						}
					plb=by;
					dx=(pla+plb)%10;
					if(tt[dep]<dx) dx-=10;
					plc=tt[dep]-dx;
					if(fc)
						{
							if(plc==cx||plc==cy) 
								{
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
								}
						}
					else
						{
							aa[dep]=pla;
							bb[dep]=plb;
							cc[dep]=plc;
							cy=plc;
							if(plc!=cx)fc=1;
							if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
							fc=0;
						}
				}
			else
				{
					for(int i=0;i<=9;i++)
						{
							plb=i;
							by=plb;
							if(plb!=bx) fb=1;
							dx=(pla+plb)%10;
							if(tt[dep]<dx) dx-=10;
							plc=tt[dep]-dx;
							if(fc)
								{
									if(plc==cx||plc==cy) 
										{
											aa[dep]=pla;
											bb[dep]=plb;
											cc[dep]=plc;
											if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
										}
								}
							else
								{
									cy=plc;
									if(plc!=cx)fc=1;
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									fc=0;
								}
							fb=0;
						}
				}
		}
	else
		{
			for(int j=0;j<=9;j++)
				{
					pla=j;
					ay=j;
					if(pla!=ax)fa=1;
					if(fb)
					{
						plb=bx;
						dx=(pla+plb)%10;
						if(tt[dep]<dx) dx-=10;
						plc=tt[dep]-dx;
						if(fc)
							{	
								if(plc==cx||plc==cy)
									{
										aa[dep]=pla;
										bb[dep]=plb;
										cc[dep]=plc;
										if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									}
							}
						else
							{
								aa[dep]=pla;
								bb[dep]=plb;
								cc[dep]=plc;
								cy=plc;
								if(plc!=cx)fc=1;
								if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
								fc=0;
							}
						plb=by;
						dx=(pla+plb)%10;
						if(tt[dep]<dx) dx-=10;
						plc=tt[dep]-dx;
						if(fc)
							{
								if(plc==cx||plc==cy) 
									{
										aa[dep]=pla;
										bb[dep]=plb;
										cc[dep]=plc;
										if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									}
							}
						else
							{
								aa[dep]=pla;
								bb[dep]=plb;
								cc[dep]=plc;
								cy=plc;
								if(plc!=cx)fc=1;
								if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
								fc=0;
							}
					}
			else
				{
					for(int i=0;i<=9;i++)
						{
							plb=i;
							by=plb;
							if(plb!=bx) fb=1;
							dx=(pla+plb)%10;
							if(tt[dep]<dx) dx-=10;
							plc=tt[dep]-dx;
							if(fc)
								{
									if(plc==cx||plc==cy) 
										{
											aa[dep]=pla;
											bb[dep]=plb;												cc[dep]=plc;
											if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
										}
								}
								else
								{
									cy=plc;
									if(plc!=cx)fc=1;
									aa[dep]=pla;
									bb[dep]=plb;
									cc[dep]=plc;
									if(pla==0)
										{
											fsa=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsa=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plb==0)
										{
											fsb=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsb=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									if(plc==0)
										{
											fsc=1;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
											fsc=0;
											dfs(dep-1,(pla+plb+plc-tt[dep])/10);
										}
									fc=0;
								}
							fb=0;
						}
				}
			}
			fa=0;
		}
		tt[dep]+=jw;
		tt[dep]%=10;
}
signed main()
{
	freopen("number.in","r",stdin);
	freopen("number.out","w",stdout);
	int Q;
	Q=read();
	while(Q--)
		{
			memset(tt,0,sizeof(tt));
			memset(aa,0,sizeof(aa));
			memset(bb,0,sizeof(bb));
			memset(cc,0,sizeof(cc));
			ax=0;
			ay=0;
			bx=0;
			by=0;
			cx=0;
			cy=0;
			fa=0;
			fb=0;
			fc=0;
			ans=INT_MAX;
			t=read();
			tot=1;
			while(t>0)
				{
					tt[tot]=t%10;
					t=t/10;
					tot++;
				}
			tot--;
			reverse(tt+1,tt+tot+1);
			for(int i=0;i<=9;i++)
				for(int j=0;j<=9;j++)
					{
						int p=(i+j)%10;
						if(tt[tot]<p) p-=10;
						int k=tt[tot]-p;
						aa[tot]=i;
						bb[tot]=j;
						cc[tot]=k;
						ax=i;
						bx=j;
						cx=k;
						dfs(tot-1,(i+j+k-tt[tot])/10);
						ax=0;
						ay=0;
						bx=0;
						by=0;
						cx=0;
						cy=0;
						fa=0;
						fb=0;
						fc=0;
					}
			cout<<ans<<endl;
		}
	return 0;
}


